// ===========================================================
//		テストアプリケーション
//
//				2003.02.13 Ver.1.0 ささい		初期作成
// ===========================================================


// ===========================================
//		インクルード・ファイル
// ===========================================
#include "stdafx.h"
#include "StringList.h"


// ===========================================
//		マクロ定義
// ===========================================


// ===========================================
//		数値定義
// ===========================================


// ===========================================
//		構造体宣言
// ===========================================


// ===========================================
//		クラス宣言
// ===========================================


// ===========================================
//		変数定義
// ===========================================


// ===========================================
//		関数定義
// ===========================================


/*=============================================================================
*NAME		:main
			:
*MODULE		:Test.cpp
			:
*FUNCTION	:メイン処理関数です
			:
*PROGRAMMED	:Y.Sasai
*HISTORY	:
*ID -- DATE ------- NOTE ------------------------------------------------------
*00 03.02.13 Y.Sasai Ver.0.00 初期作成
*/
int main( int argc, char* argv[] )
{
	TStringList slist;																			// 2003.02.13 Y.Sasai Ver.0.00 文字列リストクラス作成
	TStringList dlist;																			// 2003.02.13 Y.Sasai Ver.0.00 もひとつ作成
	int tempi;

	slist.LoadFromFile( "q:\\VCTest\\ReadMe.txt" );												// 2003.02.13 Y.Sasai Ver.0.00 読み込み
	printf( "行数:%d\n", slist.Count );															// 2003.02.13 Y.Sasai Ver.0.00 行数表示
	if ( slist.Count >= 12 ) {
		puts( slist[11] );
	}
	if ( slist.Count >= 21 ) {
		puts( slist[20] );
	}
	dlist.Text = slist.Text;																	// 2003.02.13 Y.Sasai Ver.0.00 文字列全体をコピー
	for ( tempi = 0; tempi < dlist.Count; tempi++ ) {
		puts( dlist[tempi] );																	// 2003.02.13 Y.Sasai Ver.0.00 全行表示
	}

	return 0;
}


// ===========================================
//		関数定義終了
// ===========================================
